networks:
  app_network:
    driver: bridge

services:
  webapplication1:
    image: webapplication1
    build:
      context: .
      dockerfile: WebApplication1/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
    ports:
      - "${WEB_PORT:-8080}:8080"
      - "${WEB_PORT2:-8081}:8081"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - app_network
      
  executor:
    build:
      context: .
      dockerfile: ExecutorService/Dockerfile
    ports:
      - "${EXECUTOR_PORT:-1337}:1337"
    environment:
      - HOST_NAME=${HOST_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /dev/kvm:/dev/kvm
#dude... work ts out
    cap_add:
      - SYS_ADMIN
    privileged: true
    networks:
      - app_network

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

volumes:
  postgres_data:
