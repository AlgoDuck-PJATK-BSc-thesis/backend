networks:
  app_network:
    driver: bridge
    
volumes:
  postgres_data:

services:      
  executor:
    build:
      context: .
      dockerfile: ExecutorService/Dockerfile
    ports:
      - "${EXECUTOR_PORT:-1337}:1337"
    extra_hosts:
      - "postgres-host:host-gateway"
      - "host.docker.internal:host-gateway"
    devices:
      - /dev/kvm:/dev/kvm
    env_file:
      - .env
    networks:
      - app_network
    group_add:
      - ${KVM_GID}
    
  algoduck:
    image: algoduck
    build:
      context: .
      dockerfile: AlgoDuck/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
    ports:
      - "${WEB_PORT:-8080}:8080"
      - "${WEB_PORT2:-8081}:8081"
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_URLS: http://0.0.0.0:8080
      ConnectionStrings__DefaultConnection: "Host=${DB_HOST};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
      Jwt__Key: ${JWT_KEY}
      Jwt__Issuer: ${JWT_ISSUER}
      Jwt__Audience: ${JWT_AUDIENCE}
      Jwt__DurationInMinutes: ${JWT_EXP_MINUTES}
      S3Settings__Region: ${AWS_DEFAULT_REGION}
      S3Settings__BucketName: ${S3_BUCKET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    networks:
      - app_network 

# this is just for development purposes. Remove later on        
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network